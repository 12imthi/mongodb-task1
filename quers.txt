use testdb //create-collections

db.products.insertMany({datas}) // create-documents,

**Question 1:** Find all the information about each product.
```mongodb-quiers
db.products.find()
```

**Question 2:** Find the product prices which are between 400 to 800.
```mongodb-quiers
db.products.find({ product_price: { $gte: 400, $lte: 800 } })
```

**Question 3:** Find the product prices which are not between 400 to 600.
```mongodb-quiers
db.products.find({ 
  $or: [
    { product_price: { $lt: 400 } }, 
    { product_price: { $gt: 600 } }
  ] 
})
```

**Question 4:** List the four products which are greater than 500 in price.
```mongodb-quiers
db.products.find({ product_price: { $gt: 500 } }).limit(4)
```

**Question 5:** Find the product name and product material of each product.
```mongodb-quiers
db.products.find({}, { _id: 0, product_name: 1, product_material: 1 })
```

**Question 6:** Find the product with a row id of 10.
```mongodb-quiers
db.products.find({ id: '10' })
```

**Question 7:** Find only the product name and product material.
```mongodb-quiers
db.products.findOne({}, { _id: 0, product_name: 1, product_material: 1 })
```

**Question 8:** Find all products which contain the value of "soft" in product material.
```mongodb-quiers
db.products.find({ product_material: { $regex: "soft", $options: "i" } })
```

**Question 9:** Find products which contain product color indigo  and product price 492.00.
```mongodb-quiers
db.products.find($and : [{ product_color: "indigo",product_price: 492.00}]);

```

**Question 10:** Delete the products where the product price value is 28.
```mongodb-quiers
db.products.deleteMany({ product_price: 28 })


